% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_.R
\name{nls_}
\alias{nls_}
\title{Fitting Non Linear Models with Enhanced Output (Experimental)}
\usage{
nls_(data = (.), formula, model = TRUE, ..., .data = data)
}
\arguments{
\item{data}{A \code{data.frame} containing the variables in the model.}

\item{formula}{An object of class \code{formula}: a symbolic description of the
model to be fitted.}

\item{model}{logical. If true, the model frame is returned as part of the
object. Default is FALSE.}

\item{...}{Additional arguments passed to \code{\link[stats:nls]{stats::nls()}}.}

\item{.data}{an alias for the \code{data} argument}
}
\value{
An object of class \code{nls_}, which inherits from \code{nls}, and includes
additional components such as \code{labels}. If no additional attributes are
added, a standard \code{nls} object is returned.
}
\description{
\code{nls_()} is an \strong{experimental} wrapper around the base \code{\link[stats:nls]{stats::nls()}}
function. It behaves similarly to \code{glm()}, but enriches the returned object
with additional metadata. The order of the arguments differs from \code{glm()},
and the function uses evaluation through \code{\link[svMisc:prepare_data_dot]{svMisc::recall_with_data_dot()}} to support
flexible data referencing.
}
\examples{
chick1 <- ChickWeight[ChickWeight$Chick == 1, ]
# Add labels to variables
attr(chick1$weight, "label") <- "Body weight [gm]"
attr(chick1$Time, "label") <- "Number of days"

chick1_nls <- nls_(data = chick1, weight ~ SSlogis(Time, Asym, xmid, scal))


chick1_nls
class(chick1_nls)
summary(chick1_nls)

# Access labels
chick1_nls

}
