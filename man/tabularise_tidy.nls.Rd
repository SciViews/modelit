% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabularise.nls.R
\name{tabularise_tidy.nls}
\alias{tabularise_tidy.nls}
\title{Tidy version of the nls object into a flextable object}
\usage{
\method{tabularise_tidy}{nls}(data, ..., kind = "ft", env = parent.frame())
}
\arguments{
\item{data}{A \strong{nls} object}

\item{...}{arguments of \code{\link[=tabularise_coef.summary.nls]{tabularise_coef.summary.nls()}}}

\item{kind}{The kind of table to produce: "tt" for tinytable, or "ft" for
flextable (default).}

\item{env}{The environment where to evaluate lazyeval expressions (unused for
now).}
}
\value{
A \strong{flextable} object that you can print in different forms or
rearrange with the \{flextable\} functions.
}
\description{
Extract the information contained in a nls object into a rectangular table as
it could be obtained by \code{\link[broom:reexports]{broom::tidy()}}. Here, the table is nicely
formatted as an (almost) publication-ready form (good for informal reports,
notebooks, etc).
}
\examples{
data("ChickWeight", package = "datasets")
chick1 <- ChickWeight[ChickWeight$Chick == 1, ]

# Adjust a logistic curve
chick1_logis <- nls(data = chick1, weight ~ SSlogis(Time, Asym, xmid, scal))

tabularise::tabularise$tidy(chick1_logis)
tabularise::tabularise$tidy(chick1_logis, lang = "fr")
}
\seealso{
\code{\link[tabularise:tabularise]{tabularise::tabularise()}}, \code{\link[tabularise:tabularise_tidy]{tabularise::tabularise_tidy()}},
\code{\link[=tabularise_coef.summary.nls]{tabularise_coef.summary.nls()}}
}
