% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabularise.nls.R
\name{tabularise_default.nls}
\alias{tabularise_default.nls}
\title{Tabularise a nls object}
\usage{
\method{tabularise_default}{nls}(
  data,
  header = TRUE,
  footer = TRUE,
  lang = getOption("data.io_lang", "en"),
  ...,
  env = parent.frame()
)
}
\arguments{
\item{data}{A nls object.}

\item{header}{If TRUE, add a title to the table.}

\item{footer}{If TRUE, add a footer to the table.}

\item{lang}{The language to use. The default value can be set with, e.g., options(data.io_lang = "fr") for French.}

\item{...}{Additional arguments. Not used.}

\item{env}{The environment where to evaluate formulas (you probably do not need to change the default).}
}
\value{
A \strong{flextable} object you can print in different forms or rearrange
with the {flextable} functions.
}
\description{
This method extracts and formats the nls object, similar to print(), but in flextable object.
}
\examples{
data("ChickWeight", package = "datasets")
chick1 <- ChickWeight[ChickWeight$Chick == 1, ]
# Adjust a logistic curve
chick1_logis <- nls(weight ~ SSlogis(Time, Asym, xmid, scal), data = chick1)
library(tabularise)
tabularise(chick1_logis)
}
