% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabularise.anova.R
\name{tabularise_default.anova}
\alias{tabularise_default.anova}
\title{Create a rich-formatted table from an anova object}
\usage{
\method{tabularise_default}{anova}(
  data,
  header = TRUE,
  title = header,
  auto.labs = TRUE,
  origdata = NULL,
  labs = NULL,
  lang = getOption("data.io_lang", "en"),
  show.signif.stars = getOption("show.signif.stars", TRUE),
  ...,
  kind = "ft"
)
}
\arguments{
\item{data}{An \strong{anova} object}

\item{header}{If \code{TRUE} (by default), add a header to the table}

\item{title}{If \code{TRUE}, add a title to the table header. Default to the same
value than header, except outside of a chunk where it is \code{FALSE} if a table
caption is detected (\code{tbl-cap} YAML entry).}

\item{auto.labs}{If \code{TRUE} (by default), use labels (and units) automatically
(from \verb{origdata=})}

\item{origdata}{The original data set used for the ANOVA. By default it is
\code{NULL}. Used to extract labels that are lost in the \strong{anova} object.}

\item{labs}{Labels to change the default names in the \code{term} column of the
table. By default it is \code{NULL} and nothing is changed.}

\item{lang}{The natural language to use. The default value is set with,
e.g., \code{options(data.io_lang = "fr")} for French.}

\item{show.signif.stars}{If \code{TRUE}, add the significance stars to the table.
The default is taken from \code{getOption("show.signif.stars")}.}

\item{...}{Additional arguments (not used for now)}

\item{kind}{The kind of table to produce: "tt" for tinytable, or "ft" for
flextable (default).}
}
\value{
A \strong{flextable} object you can print in different form or rearrange
with the \{flextable\} functions.
}
\description{
Create a rich-formatted table from an anova object
}
\examples{
is <- data.io::read("iris", package = "datasets")

is_lm1 <- lm(data = is, petal_length ~ species)

library(tabularise)

anova(is_lm1) |> tabularise_default()
# identical
anova(is_lm1) |> tabularise()
# Use labels
anova(is_lm1) |> tabularise(origdata = is)

# alternative with anova_() in {modelit} package
anova_(is_lm1) |> tabularise()

is_lm2 <- lm(data = is, petal_length ~ sepal_length + species)

anova(is_lm1, is_lm2) |> tabularise(origdata = is)
anova_(is_lm1, is_lm2) |> tabularise()

}
