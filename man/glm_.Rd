% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_.R
\name{glm_}
\alias{glm_}
\title{Fitting Generalized Linear Models with Enhanced Output (Experimental)}
\usage{
glm_(data = (.), formula, ..., .data = data)
}
\arguments{
\item{data}{A \code{data.frame} containing the variables in the model.}

\item{formula}{An object of class \code{formula}: a symbolic description of the
model to be fitted.}

\item{...}{Additional arguments passed to \code{\link[stats:glm]{stats::glm()}}.}

\item{.data}{an alias for the \code{data} argument}
}
\value{
An object of class \code{glm_}, which inherits from \code{glm}, and includes
additional components such as \code{labels}. If no additional attributes are
added, a standard \code{glm} object is returned.
}
\description{
\code{glm_()} is an \strong{experimental} wrapper around the base \code{\link[stats:glm]{stats::glm()}}
function. It behaves similarly to \code{glm()}, but enriches the returned object
with additional metadata. The order of the arguments differs from \code{glm()},
and the function uses evaluation through  \link[svBase:prepare_data_dot]{svBase::prepare_data_dot} and
\link[svBase:prepare_data_dot]{svBase::recall_with_data_dot} to support the data-dot mechanism.
}
\examples{
data(iris)

# Add labels to variables
attr(iris$Sepal.Length, "label") <- "Sepal Length (cm)"
attr(iris$Petal.Length, "label") <- "Petal Length (cm)"

# Fit the model using lm_()
res <- glm_(iris, formula = Petal.Length ~ Sepal.Length + Species)

res
class(res)
summary(res)

# Access labels
res$labels

}
